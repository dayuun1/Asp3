@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager
@model UserProfileModel

@{
    ViewData["Title"] = "Profile";
}

<h2>Your Profile</h2>

<div>
    <p><strong>Email:</strong> @Model.Email</p>
    <p><strong>Roles:</strong> @string.Join(", ", Model.Roles)</p>
    <p><strong>Is Admin:</strong> @(Model.IsAdmin ? "Yes" : "No")</p>
</div>

@if (ViewBag.Message != null)
{
    <div class="alert alert-success">@ViewBag.Message</div>
}

<h3>Change Password</h3>

<form asp-action="Profile" method="post">
    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="form-group">
        <label asp-for="NewPassword"></label>
        <input asp-for="NewPassword" class="form-control" />
        <span asp-validation-for="NewPassword" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ConfirmNewPassword"></label>
        <input asp-for="ConfirmNewPassword" class="form-control" />
        <span asp-validation-for="ConfirmNewPassword" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Change Password</button>
    @{
        var user = await UserManager.GetUserAsync(User);
        var isAdmin = await UserManager.IsInRoleAsync(user, "Admin");
    }

    @if (isAdmin)
    {
        <a asp-action="CreateAdmin" asp-controller="Account" class="btn btn-warning">Create New Admin</a>
    }
</form>