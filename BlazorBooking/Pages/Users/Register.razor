@page "/User/Register"
@inject HttpClient Http
@using BookingHotel.Models
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject NavigationManager Navigation
@inject ProtectedLocalStorage ProtectedLocalStore
@inject AuthStateService AuthState

<h3>Реєстрація</h3>

@if (!string.IsNullOrEmpty(error))
{
    <div class="alert alert-danger">@error</div>
}

<EditForm Model="@registerModel" OnValidSubmit="Send">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" class="form-control" @bind-Value="registerModel.Email" />
    </div>
    <div class="form-group">
        <label for="password">Пароль:</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="registerModel.Password" />
    </div>
    <div class="form-group">
        <label for="confirmPassword">Підтвердження пароля:</label>
        <InputText id="confirmPassword" type="password" class="form-control" @bind-Value="registerModel.ConfirmPassword" />
    </div>
    <button type="submit" class="btn btn-primary mt-2">Зареєструватись</button>
</EditForm>

@code {
    private UserRegistrationModel registerModel = new();
    private string error = string.Empty;

    private async Task Send()
    {
        var response = await Http.PostAsJsonAsync("User/register", registerModel);
        if (response.IsSuccessStatusCode)
        {
            var token = await response.Content.ReadAsStringAsync();
            await ProtectedLocalStore.SetAsync("login", token);
            AuthState.SetLoginState(true);
            Navigation.NavigateTo("/");
        }
        else
        {
            error = await response.Content.ReadAsStringAsync();
        }
    }
}
